TAP version 14
# Subtest: should work with valid payload
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 1 - should work with valid payload # time=42.047ms

# Subtest: should fail immediately with invalid payload
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 2 - should fail immediately with invalid payload # time=12.976ms

# Subtest: should be able to use setErrorHandler specify custom validation error
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 3 - should be able to use setErrorHandler specify custom validation error # time=8.806ms

# Subtest: validation error has 400 statusCode set
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 4 - validation error has 400 statusCode set # time=7.87ms

# Subtest: error inside custom error handler should have validationContext
    1..1
    ok 1 - should be equal
ok 5 - error inside custom error handler should have validationContext # time=1.389ms

# Subtest: error inside custom error handler should have validationContext if specified by custom error handler
    1..1
    ok 1 - should be equal
ok 6 - error inside custom error handler should have validationContext if specified by custom error handler # time=1.284ms

# Subtest: should be able to attach validation to request
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 7 - should be able to attach validation to request # time=12.039ms

# Subtest: should respect when attachValidation is explicitly set to false
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 8 - should respect when attachValidation is explicitly set to false # time=6.77ms

# Subtest: Attached validation error should take precedence over setErrorHandler
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 9 - Attached validation error should take precedence over setErrorHandler # time=6.239ms

# Subtest: should handle response validation error
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 10 - should handle response validation error # time=4.118ms

# Subtest: should handle response validation error with promises
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 11 - should handle response validation error with promises # time=2.008ms

# Subtest: should return a defined output message parsing AJV errors
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 12 - should return a defined output message parsing AJV errors # time=6.6ms

# Subtest: should return a defined output message parsing JOI errors
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 13 - should return a defined output message parsing JOI errors # time=5.083ms

# Subtest: should return a defined output message parsing JOI error details
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 14 - should return a defined output message parsing JOI error details # time=1.832ms

# Subtest: the custom error formatter context must be the server instance
    1..4
    ok 1 - should be equivalent
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 15 - the custom error formatter context must be the server instance # time=6.03ms

# Subtest: the custom error formatter context must be the server instance in options
    1..4
    ok 1 - should be equivalent
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 16 - the custom error formatter context must be the server instance in options # time=5.754ms

# Subtest: should call custom error formatter
    1..9
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equivalent
    ok 9 - should be equal
ok 17 - should call custom error formatter # time=6.88ms

# Subtest: should catch error inside formatter and return message
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 18 - should catch error inside formatter and return message # time=7.526ms

# Subtest: cannot create a fastify instance with wrong type of errorFormatter
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
ok 19 - cannot create a fastify instance with wrong type of errorFormatter # time=1.017ms

# Subtest: should register a route based schema error formatter
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 20 - should register a route based schema error formatter # time=5.838ms

# Subtest: prefer route based error formatter over global one
    1..9
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equivalent
    ok 9 - should be equal
ok 21 - prefer route based error formatter over global one # time=7.855ms

# Subtest: adding schemaErrorFormatter
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 22 - adding schemaErrorFormatter # time=6.377ms

# Subtest: plugin override
    1..15
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equivalent
    ok 9 - should be equal
    ok 10 - should not error
    ok 11 - should be equivalent
    ok 12 - should be equal
    ok 13 - should not error
    ok 14 - should be equivalent
    ok 15 - should be equal
ok 23 - plugin override # time=10.139ms

1..23
