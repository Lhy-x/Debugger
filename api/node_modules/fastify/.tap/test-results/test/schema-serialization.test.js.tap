TAP version 14
# Subtest: basic test
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 1 - basic test # time=28.183ms

# Subtest: custom serializer options
    1..3
    ok 1 - should not error
    ok 2 - it must use the ceil rounding
    ok 3 - should be equal
ok 2 - custom serializer options # time=5.486ms

# Subtest: Different content types
    1..32
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
    ok 8 - should be equal
    ok 9 - should not error
    ok 10 - should be equal
    ok 11 - should be equal
    ok 12 - should not error
    ok 13 - should be equal
    ok 14 - should be equal
    ok 15 - should not error
    ok 16 - should be equal
    ok 17 - should be equal
    ok 18 - should not error
    ok 19 - should be equal
    ok 20 - should be equal
    ok 21 - should not error
    ok 22 - should be equal
    ok 23 - should be equal
    ok 24 - should not error
    ok 25 - should be equal
    ok 26 - should be equal
    ok 27 - should not error
    ok 28 - should be equal
    ok 29 - should be equal
    ok 30 - should not error
    ok 31 - should be equal
    ok 32 - should be equal
ok 3 - Different content types # time=16.209ms

# Subtest: Invalid multiple content schema, throw FST_ERR_SCH_CONTENT_MISSING_SCHEMA error
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
ok 4 - Invalid multiple content schema, throw FST_ERR_SCH_CONTENT_MISSING_SCHEMA error # time=2.109ms

# Subtest: Use the same schema id in different places
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 5 - Use the same schema id in different places # time=4.586ms

# Subtest: Use shared schema and $ref with $id in response ($ref to $id)
    1..5
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
ok 6 - Use shared schema and $ref with $id in response ($ref to $id) # time=27.493ms

# Subtest: Shared schema should be pass to serializer and validator ($ref to shared schema /definitions)
    1..5
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equivalent
ok 7 - Shared schema should be pass to serializer and validator ($ref to shared schema /definitions) # time=18.677ms

# Subtest: Custom setSerializerCompiler
    1..7
    ok 1 - the serializer is set by the parent
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - should not error
    ok 7 - should be equal
ok 8 - Custom setSerializerCompiler # time=4.914ms

# Subtest: Custom setSerializerCompiler returns bad serialized output
    1..4
    ok 1 - returning an invalid serialization
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent strictly
ok 9 - Custom setSerializerCompiler returns bad serialized output # time=1.963ms

# Subtest: Custom setSerializerCompiler with addSchema
    1..6
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equivalent
    ok 5 - should not error
    ok 6 - should be equal
ok 10 - Custom setSerializerCompiler with addSchema # time=1.414ms

# Subtest: Custom serializer per route
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - the custom and route serializer has been called
    1..4
ok 11 - Custom serializer per route # time=3.942ms

# Subtest: Reply serializer win over serializer 
    1..6
    ok 1 - the custom compiler has been created
    ok 2 - the custom compiler has been created
    ok 3 - should be equivalent
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
ok 12 - Reply serializer win over serializer # time=2.374ms

# Subtest: Reply serializer win over serializer 
    1..6
    ok 1 - the custom compiler has been created
    ok 2 - the custom compiler has been created
    ok 3 - should be equivalent
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
ok 13 - Reply serializer win over serializer # time=1.862ms

# Subtest: The schema compiler recreate itself if needed
    1..1
    ok 1 - should not error
ok 14 - The schema compiler recreate itself if needed # time=3.137ms

# Subtest: The schema changes the default error handler output
    1..4
    ok 1 - should be equal
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 15 - The schema changes the default error handler output # time=3.599ms

# Subtest: do not crash if status code serializer errors
    ok 1 - should be equal
    ok 2 - should be equivalent
    1..2
ok 16 - do not crash if status code serializer errors # time=13.323ms

# Subtest: custom schema serializer error, empty message
    1..2
    ok 1 - should be equal
    ok 2 - should be equivalent
ok 17 - custom schema serializer error, empty message # time=2.94ms

# Subtest: error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
ok 18 - error in custom schema serialize compiler, throw FST_ERR_SCH_SERIALIZATION_BUILD error # time=2.946ms

# Subtest: Errors in serializer send to errorHandler
    ok 1 - should be equal
    ok 2 - should be equivalent
    ok 3 - error presents
    ok 4 - Serialization sign presents
    1..4
ok 19 - Errors in serializer send to errorHandler # time=2.344ms

# Subtest: capital X
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 20 - capital X # time=2.48ms

# Subtest: allow default as status code and used as last fallback
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 21 - allow default as status code and used as last fallback # time=2.284ms

1..21
