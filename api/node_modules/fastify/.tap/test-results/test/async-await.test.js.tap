TAP version 14
# Subtest: async await
    1..13
    ok 1 - (unnamed test)
    ok 2 - (unnamed test)
    ok 3 - (unnamed test)
    ok 4 - should not error
    # Subtest: test for hostname and port in request
        1..4
        ok 1 - should not error
        ok 2 - should be equal
        ok 3 - should be equal
        ok 4 - should be equal
    ok 5 - test for hostname and port in request # time=208.027ms
    
    ok 6 - should not error
    ok 7 - should be equal
    ok 8 - should be equal
    ok 9 - should be equivalent
    ok 10 - should not error
    ok 11 - should be equal
    ok 12 - should be equal
    ok 13 - should be equivalent
ok 1 - async await # time=250.84ms

# Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 2 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=11.366ms

# Subtest: ignore the result of the promise if reply.send is called beforehand (object)
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 3 - ignore the result of the promise if reply.send is called beforehand (object) # time=10.607ms

# Subtest: server logs an error if reply.send is called and a value is returned via async/await
    1..5
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
ok 4 - server logs an error if reply.send is called and a value is returned via async/await # time=11.27ms

# Subtest: ignore the result of the promise if reply.send is called beforehand (undefined)
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 5 - ignore the result of the promise if reply.send is called beforehand (undefined) # time=16.102ms

# Subtest: ignore the result of the promise if reply.send is called beforehand (object)
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equivalent
    ok 4 - should be equal
ok 6 - ignore the result of the promise if reply.send is called beforehand (object) # time=5.945ms

# Subtest: await reply if we will be calling reply.send in the future
    1..4
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equivalent
ok 7 - await reply if we will be calling reply.send in the future # time=2.974ms

# Subtest: await reply if we will be calling reply.send in the future (error case)
    1..5
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equal
ok 8 - await reply if we will be calling reply.send in the future (error case) # time=2.752ms

# Subtest: support reply decorators with await
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 9 - support reply decorators with await # time=3.787ms

# Subtest: inject async await
    1..1
    ok 1 - should be equivalent
ok 10 - inject async await # time=1.732ms

# Subtest: inject async await - when the server equal up
    1..2
    ok 1 - should be equivalent
    ok 2 - should be equivalent
ok 11 - inject async await - when the server equal up # time=201.918ms

# Subtest: async await plugin
    1..1
    ok 1 - should be equivalent
ok 12 - async await plugin # time=204.477ms

# Subtest: does not call reply.send() twice if 204 response equal already sent
    1..2
    ok 1 - should not error
    ok 2 - should be equal
ok 13 - does not call reply.send() twice if 204 response equal already sent # time=1.543ms

# Subtest: promise was fulfilled with undefined
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equal
ok 14 - promise was fulfilled with undefined # time=9.067ms

# Subtest: promise was fulfilled with undefined using inject
    ok 1 - should be equal
    ok 2 - should be equal
    1..2
ok 15 - promise was fulfilled with undefined using inject # time=1.557ms

# Subtest: error is not logged because promise was fulfilled with undefined but response was sent before promise resolution
    1..4
    ok 1 - should not error
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 16 - error is not logged because promise was fulfilled with undefined but response was sent before promise resolution # time=6.041ms

# Subtest: Thrown Error instance sets HTTP status code
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 17 - Thrown Error instance sets HTTP status code # time=2.461ms

# Subtest: customErrorHandler support
    1..4
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 18 - customErrorHandler support # time=2.185ms

# Subtest: customErrorHandler support without throwing
    1..4
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 19 - customErrorHandler support without throwing # time=1.57ms

# Subtest: customErrorHandler only called if reply not already sent
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 20 - customErrorHandler only called if reply not already sent # time=1.344ms

# Subtest: setNotFoundHandler should accept return value
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 21 - setNotFoundHandler should accept return value # time=1.441ms

# Subtest: customErrorHandler should accept return value
    1..4
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 22 - customErrorHandler should accept return value # time=1.4ms

# Subtest: await self
    ok 1 - should be equal
    1..1
ok 23 - await self # time=0.942ms

1..23
