TAP version 14
# Subtest: Should register a host constrained route
    1..7
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 1 - Should register a host constrained route # time=23.034ms

# Subtest: Should register the same route with host constraints
    1..8
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equal
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equal
ok 2 - Should register the same route with host constraints # time=2.591ms

# Subtest: Should allow registering custom constrained routes
    1..8
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equal
ok 3 - Should allow registering custom constrained routes # time=5.455ms

# Subtest: Should allow registering custom constrained routes outside constructor
    1..8
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should not error
    ok 8 - should be equal
ok 4 - Should allow registering custom constrained routes outside constructor # time=2.341ms

# Subtest: Custom constrained routes registered also for HEAD method generated by fastify
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 5 - Custom constrained routes registered also for HEAD method generated by fastify # time=2.066ms

# Subtest: Custom constrained routes registered with addConstraintStrategy apply also for HEAD method generated by fastify
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 6 - Custom constrained routes registered with addConstraintStrategy apply also for HEAD method generated by fastify # time=1.478ms

# Subtest: Add a constraint strategy after fastify instance was started
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - Cannot add constraint strategy when fastify instance is already started!
ok 7 - Add a constraint strategy after fastify instance was started # time=1.798ms

# Subtest: Add a constraint strategy should throw an error if there already exist custom strategy with the same name
    1..1
    ok 1 - There already exists a custom constraint with the name secret.
ok 8 - Add a constraint strategy should throw an error if there already exist custom strategy with the same name # time=0.477ms

# Subtest: Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used
    1..1
    ok 1 - (unnamed test)
ok 9 - Add a constraint strategy shouldn't throw an error if default constraint with the same name isn't used # time=0.351ms

# Subtest: Add a constraint strategy should throw an error if default constraint with the same name is used
    1..1
    ok 1 - There already exists a route with version constraint.
ok 10 - Add a constraint strategy should throw an error if default constraint with the same name is used # time=0.657ms

# Subtest: The hasConstraintStrategy should return false for default constraints until they are used
    1..6
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should be equal
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should be equal
ok 11 - The hasConstraintStrategy should return false for default constraints until they are used # time=0.849ms

# Subtest: The hasConstraintStrategy should return true if there already exist a custom constraint with the same name
    1..2
    ok 1 - should be equal
    ok 2 - should be equal
ok 12 - The hasConstraintStrategy should return true if there already exist a custom constraint with the same name # time=0.386ms

# Subtest: Should allow registering an unconstrained route after a constrained route
    1..6
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equivalent
    ok 6 - should be equal
ok 13 - Should allow registering an unconstrained route after a constrained route # time=1.8ms

# Subtest: Should allow registering constrained routes in a prefixed plugin
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 14 - Should allow registering constrained routes in a prefixed plugin # time=2.805ms

# Subtest: Should allow registering a constrained GET route after a constrained HEAD route
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 15 - Should allow registering a constrained GET route after a constrained HEAD route # time=1.331ms

# Subtest: Should allow registering a constrained GET route after an unconstrained HEAD route
    1..3
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
ok 16 - Should allow registering a constrained GET route after an unconstrained HEAD route # time=1.282ms

# Subtest: Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes
    1..1
    ok 1 - should be equal
ok 17 - Will not try to re-createprefixed HEAD route if it already exists and exposeHeadRoutes is true for constrained routes # time=2.219ms

# Subtest: allows separate constrained and unconstrained HEAD routes
    1..1
    ok 1 - should be equal
ok 18 - allows separate constrained and unconstrained HEAD routes # time=2.556ms

# Subtest: allow async constraints
    1..5
    ok 1 - should be equivalent
    ok 2 - should be equal
    ok 3 - should be equivalent
    ok 4 - should be equal
    ok 5 - should be equal
ok 19 - allow async constraints # time=2.373ms

# Subtest: error in async constraints
    1..8
    ok 1 - should be equivalent
    ok 2 - should be equal
    ok 3 - should be equivalent
    ok 4 - should be equal
    ok 5 - should be equivalent
    ok 6 - should be equal
    ok 7 - should be equivalent
    ok 8 - should be equal
ok 20 - error in async constraints # time=2.629ms

# Subtest: Allow regex constraints in routes
    1..5
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should be equal
    ok 4 - should not error
    ok 5 - should be equal
ok 21 - Allow regex constraints in routes # time=6.02ms

1..21
