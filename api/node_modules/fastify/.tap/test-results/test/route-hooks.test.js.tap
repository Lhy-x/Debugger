TAP version 14
# Subtest: preHandler
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 1 - preHandler # time=30.957ms

# Subtest: preHandler option should be called after preHandler hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 2 - preHandler option should be called after preHandler hook # time=2.715ms

# Subtest: preHandler option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 3 - preHandler option could accept an array of functions # time=1.748ms

# Subtest: preHandler option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 4 - preHandler option could accept an array of async functions # time=1.656ms

# Subtest: preHandler option does not interfere with preHandler hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 5 - preHandler option does not interfere with preHandler hook # time=3.474ms

# Subtest: onSend
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 6 - onSend # time=2.978ms

# Subtest: onSend option should be called after onSend hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 7 - onSend option should be called after onSend hook # time=2.032ms

# Subtest: onSend option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 8 - onSend option could accept an array of functions # time=2.86ms

# Subtest: onSend option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 9 - onSend option could accept an array of async functions # time=4.311ms

# Subtest: onSend option does not interfere with onSend hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 10 - onSend option does not interfere with onSend hook # time=1.715ms

# Subtest: onRequest
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 11 - onRequest # time=2.179ms

# Subtest: onRequest option should be called after onRequest hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 12 - onRequest option should be called after onRequest hook # time=3.045ms

# Subtest: onRequest option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 13 - onRequest option could accept an array of functions # time=5.68ms

# Subtest: onRequest option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 14 - onRequest option could accept an array of async functions # time=1.423ms

# Subtest: onRequest option does not interfere with onRequest hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 15 - onRequest option does not interfere with onRequest hook # time=1.575ms

# Subtest: onResponse
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 16 - onResponse # time=2.051ms

# Subtest: onResponse option should be called after onResponse hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 17 - onResponse option should be called after onResponse hook # time=1.693ms

# Subtest: onResponse option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 18 - onResponse option could accept an array of functions # time=2.019ms

# Subtest: onResponse option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equal
ok 19 - onResponse option could accept an array of async functions # time=1.438ms

# Subtest: onResponse option does not interfere with onResponse hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 20 - onResponse option does not interfere with onResponse hook # time=2.079ms

# Subtest: preValidation
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 21 - preValidation # time=2.096ms

# Subtest: preValidation option should be called after preValidation hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 22 - preValidation option should be called after preValidation hook # time=1.876ms

# Subtest: preValidation option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 23 - preValidation option could accept an array of functions # time=1.859ms

# Subtest: preValidation option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 24 - preValidation option could accept an array of async functions # time=1.757ms

# Subtest: preValidation option does not interfere with preValidation hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 25 - preValidation option does not interfere with preValidation hook # time=1.388ms

# Subtest: preParsing
    1..3
    ok 1 - hook called
    ok 2 - should not error
    ok 3 - should be equivalent
ok 26 - preParsing # time=2.168ms

# Subtest: preParsing option should be called after preParsing hook
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 27 - preParsing option should be called after preParsing hook # time=1.619ms

# Subtest: preParsing option could accept an array of functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 28 - preParsing option could accept an array of functions # time=1.621ms

# Subtest: preParsing option could accept an array of async functions
    1..3
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
ok 29 - preParsing option could accept an array of async functions # time=1.815ms

# Subtest: preParsing option does not interfere with preParsing hook
    1..7
    ok 1 - should be equal
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
    ok 5 - should be equal
    ok 6 - should not error
    ok 7 - should be equal
ok 30 - preParsing option does not interfere with preParsing hook # time=2.503ms

# Subtest: preHandler option should be unique per route
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 31 - preHandler option should be unique per route # time=4.946ms

# Subtest: preHandler option should handle errors
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 32 - preHandler option should handle errors # time=2.264ms

# Subtest: preHandler option should handle throwing objects
    1..4
    ok 1 - the error object throws by the user
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 33 - preHandler option should handle throwing objects # time=1.9ms

# Subtest: preHandler option should handle throwing objects by default
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 34 - preHandler option should handle throwing objects by default # time=1.723ms

# Subtest: preHandler option should handle errors with custom status code
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 35 - preHandler option should handle errors with custom status code # time=3.006ms

# Subtest: preHandler option should keep the context
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 36 - preHandler option should keep the context # time=2.41ms

# Subtest: preHandler option should keep the context (array)
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 37 - preHandler option should keep the context (array) # time=4.021ms

# Subtest: onRequest option should be unique per route
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 38 - onRequest option should be unique per route # time=1.929ms

# Subtest: onRequest option should handle errors
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 39 - onRequest option should handle errors # time=1.017ms

# Subtest: onRequest option should handle throwing objects
    1..4
    ok 1 - the error object throws by the user
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 40 - onRequest option should handle throwing objects # time=1.134ms

# Subtest: onRequest option should handle throwing objects by default
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 41 - onRequest option should handle throwing objects by default # time=1.488ms

# Subtest: onRequest option should handle errors with custom status code
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 42 - onRequest option should handle errors with custom status code # time=0.946ms

# Subtest: onRequest option should keep the context
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 43 - onRequest option should keep the context # time=1.844ms

# Subtest: onRequest option should keep the context (array)
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 44 - onRequest option should keep the context (array) # time=2.171ms

# Subtest: preValidation option should be unique per route
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 45 - preValidation option should be unique per route # time=1.652ms

# Subtest: preValidation option should handle errors
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 46 - preValidation option should handle errors # time=1.876ms

# Subtest: preValidation option should handle throwing objects
    1..4
    ok 1 - the error object throws by the user
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 47 - preValidation option should handle throwing objects # time=1.142ms

# Subtest: preValidation option should handle throwing objects by default
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 48 - preValidation option should handle throwing objects by default # time=1.009ms

# Subtest: preValidation option should handle errors with custom status code
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 49 - preValidation option should handle errors with custom status code # time=3.152ms

# Subtest: preValidation option should keep the context
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 50 - preValidation option should keep the context # time=3.609ms

# Subtest: preValidation option should keep the context (array)
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 51 - preValidation option should keep the context (array) # time=7.151ms

# Subtest: preParsing option should be unique per route
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 52 - preParsing option should be unique per route # time=3.041ms

# Subtest: preParsing option should handle errors
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 53 - preParsing option should handle errors # time=1.131ms

# Subtest: preParsing option should handle throwing objects
    1..4
    ok 1 - the error object throws by the user
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 54 - preParsing option should handle throwing objects # time=1.069ms

# Subtest: preParsing option should handle throwing objects by default
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 55 - preParsing option should handle throwing objects by default # time=0.938ms

# Subtest: preParsing option should handle errors with custom status code
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 56 - preParsing option should handle errors with custom status code # time=0.903ms

# Subtest: preParsing option should keep the context
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 57 - preParsing option should keep the context # time=2.46ms

# Subtest: preParsing option should keep the context (array)
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 58 - preParsing option should keep the context (array) # time=1.681ms

# Subtest: preValidation option should be called before preHandler hook
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 59 - preValidation option should be called before preHandler hook # time=1.799ms

# Subtest: preSerialization option should be able to modify the payload
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 60 - preSerialization option should be able to modify the payload # time=1.209ms

# Subtest: preParsing option should be called before preValidation hook
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 61 - preParsing option should be called before preValidation hook # time=1.153ms

# Subtest: preParsing option should be able to modify the payload
    1..3
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should be equivalent
ok 62 - preParsing option should be able to modify the payload # time=1.397ms

# Subtest: preParsing option should be able to supply statusCode
    1..4
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equal
    ok 4 - should be equivalent
ok 63 - preParsing option should be able to supply statusCode # time=1.497ms

# Subtest: onRequest option should be called before preParsing
    1..3
    ok 1 - should be equal
    ok 2 - should not error
    ok 3 - should be equivalent
ok 64 - onRequest option should be called before preParsing # time=1.438ms

# Subtest: onTimeout on route
    1..4
    ok 1 - should not error
    ok 2 - onTimeout called
    ok 3 - type is Error
    ok 4 - should be equal
ok 65 - onTimeout on route # time=518.178ms

# Subtest: onError on route
    1..3
    ok 1 - should match pattern
    ok 2 - should not error
    ok 3 - should be equivalent
ok 66 - onError on route # time=1.529ms

1..66
