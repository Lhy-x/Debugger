TAP version 14
# Subtest: Prefix options should add a prefix for all the routes inside a register / 1
    1..6
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
    ok 5 - should not error
    ok 6 - should be equivalent
ok 1 - Prefix options should add a prefix for all the routes inside a register / 1 # time=25.963ms

# Subtest: Prefix options should add a prefix for all the routes inside a register / 2
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 2 - Prefix options should add a prefix for all the routes inside a register / 2 # time=5.518ms

# Subtest: Prefix options should add a prefix for all the chained routes inside a register / 3
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 3 - Prefix options should add a prefix for all the chained routes inside a register / 3 # time=2.847ms

# Subtest: Prefix should support parameters as well
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 4 - Prefix should support parameters as well # time=2.562ms

# Subtest: Prefix should support /
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 5 - Prefix should support / # time=2.052ms

# Subtest: Prefix without /
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 6 - Prefix without / # time=1.993ms

# Subtest: Prefix with trailing /
    1..6
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
    ok 5 - should not error
    ok 6 - should be equivalent
ok 7 - Prefix with trailing / # time=3.116ms

# Subtest: Prefix works multiple levels deep
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 8 - Prefix works multiple levels deep # time=2.47ms

# Subtest: Different register - encapsulation check
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 9 - Different register - encapsulation check # time=3.821ms

# Subtest: Can retrieve prefix within encapsulated instances
    1..4
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equal
ok 10 - Can retrieve prefix within encapsulated instances # time=2.557ms

# Subtest: matches both /prefix and /prefix/ with a / route
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 11 - matches both /prefix and /prefix/ with a / route # time=2.265ms

# Subtest: prefix "/prefix/" does not match "/prefix" with a / route
    1..4
    ok 1 - should not error
    ok 2 - should be equal
    ok 3 - should not error
    ok 4 - should be equivalent
ok 12 - prefix "/prefix/" does not match "/prefix" with a / route # time=2.8ms

# Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 13 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true # time=6.831ms

# Subtest: matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 14 - matches both /prefix and /prefix/ with a / route - ignoreDuplicateSlashes: true # time=2.293ms

# Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 15 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: false # time=2.504ms

# Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 16 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: false # time=2.272ms

# Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 17 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=2.213ms

# Subtest: matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equivalent
ok 18 - matches both /prefix and /prefix/ with a / route - ignoreTrailingSlash: true, ignoreDuplicateSlashes: false # time=2.361ms

# Subtest: returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 19 - returns 404 status code with /prefix/ and / route - prefixTrailingSlash: "both" (default), ignoreTrailingSlash: true # time=1.621ms

# Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 20 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=1.784ms

# Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 21 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreTrailingSlash: true, ignoreDuplicateSlashes: true # time=1.571ms

# Subtest: matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true
    1..2
    ok 1 - should not error
    ok 2 - should be equivalent
ok 22 - matches both /prefix and /prefix/  with a / route - prefixTrailingSlash: "both", ignoreDuplicateSlashes: true # time=1.527ms

# Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equal
ok 23 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreTrailingSlash: false # time=1.904ms

# Subtest: matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equal
ok 24 - matches only /prefix  with a / route - prefixTrailingSlash: "no-slash", ignoreDuplicateSlashes: false # time=1.854ms

# Subtest: matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false
    1..4
    ok 1 - should not error
    ok 2 - should be equivalent
    ok 3 - should not error
    ok 4 - should be equal
ok 25 - matches only /prefix/  with a / route - prefixTrailingSlash: "slash", ignoreTrailingSlash: false # time=1.766ms

# Subtest: calls onRoute only once when prefixing
    1..1
    ok 1 - should be equivalent
ok 26 - calls onRoute only once when prefixing # time=1.938ms

1..26
